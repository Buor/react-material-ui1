{"version":3,"sources":["components/Header.jsx","components/SideMenu.jsx","components/useForm.js","components/controls/Button.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","services/employeeServices.js","Pages/Employees/EmployeeForm.jsx","components/PageHeader.jsx","Pages/Employees/Employees.jsx","App/App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","classes","AppBar","position","className","Toolbar","Grid","container","alignItems","itemstyle","border","InputBase","placeholder","startAdornment","item","sm","IconButton","Badge","badgeContent","color","withStyles","sideMenu","display","flexDirection","left","width","height","props","margin","Form","children","other","autoComplete","label","textTransform","Controls","name","value","onChange","error","TextField","variant","helperText","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","title","options","InputLabel","MenuItem","FormHelperText","checked","e","target","convertToDefEventPara","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","text","size","onClick","KEYS","insertEmployee","data","employees","localStorage","getItem","setItem","JSON","stringify","parse","getAllEmployees","parseInt","toString","generateEmployeeId","push","genderItems","initialFieldValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","validateOnChange","useState","setValues","handleInputChange","resetForm","console","log","useForm","onSubmit","preventDefault","employeeService","xs","type","pageHeader","marginBottom","pageicon","pageTitle","paddingLeft","PageHeader","icon","subtitle","Paper","elevation","square","Card","Typography","component","pageContent","Employees","createMuiTheme","palette","primary","main","light","secondary","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d59d4c1.chunk.js","sourcesContent":["import {\r\n    AppBar,\r\n    Badge,\r\n    Grid,\r\n    IconButton,\r\n    InputBase,\r\n    makeStyles,\r\n    Toolbar,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    searchInput: {\r\n        opacity: \"0.6\",\r\n        padding: `0px ${theme.spacing(1)}px`,\r\n        fontSize: \"0.8rem\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#f2f2f2\",\r\n        },\r\n        \"& .MuiSvgIcon-root\": {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid itemstyle={{ border: \"1px solid #fff\" }}>\r\n                        <InputBase\r\n                            placeholder=\"Search topics\"\r\n                            className={classes.searchInput}\r\n                            startAdornment={<SearchIcon fontSize={\"small\"} />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm></Grid>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <ApartmentIcon fontSize={\"small\"} />\r\n                            </Badge>\r\n                        </IconButton>\r\n\r\n                        <IconButton>\r\n                            <Badge badgeContent={3} color=\"primary\">\r\n                                <ChatBubbleOutlineIcon fontSize={\"small\"} />\r\n                            </Badge>\r\n                        </IconButton>\r\n\r\n                        <IconButton>\r\n                            <PowerSettingsNewIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {makeStyles, withStyles} from '@material-ui/core'\r\n// withStyles, makeStyles\r\n\r\nconst style = {\r\n    sideMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        width: '320px',\r\n        height: '100%',\r\n        backgroundColor: '#253053'\r\n    }\r\n}\r\nconst SideMenu = (props) => {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.sideMenu}>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default withStyles(style)(SideMenu);","import { formatMs } from '@material-ui/core';\r\nimport React, {useState} from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFieldValues,validateOnChange=false, validate) {\r\n    const [values,setValues] = useState(initialFieldValues);\r\n    const [errors,setErrors] = useState({});\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        });\r\n        if(validateOnChange) {\r\n            validate({[name]: value});\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        console.log('Worked!');\r\n        setValues(initialFieldValues);\r\n        setErrors({});\r\n    }\r\n    \r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        errors,\r\n        setErrors,\r\n        resetForm\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormControl-root\": {\r\n            width: \"80%\",\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport function Form(props) {\r\n    const classes = useStyles();\r\n    const {children, ...other} = props;\r\n    return ( <form className={classes.root} autoComplete=\"off\" {...other}>\r\n        {children}\r\n    </form>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <MuiButton\r\n        classes={{root: classes.root, label: classes.label}}\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n        >\r\n            {text}\r\n        </MuiButton>\r\n    );\r\n}\r\n","import Input from './Input';\r\nimport RadioGroup from './RadioGroup';\r\nimport Select from './Select';\r\nimport Checkbox from './Checkbox';\r\nimport DatePicker from './DatePicker';\r\nimport Button from './Button';\r\n\r\nexport const Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    DatePicker,\r\n    Button\r\n}","import React from 'react'\r\nimport {TextField } from \"@material-ui/core\";\r\n\r\nexport default function Input(props) {\r\n    const {name,label,value,onChange,error=null} = props;\r\n    return (\r\n        <TextField\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={error ?? \"\"}\r\n        helperText={error ?? error}\r\n    />\r\n    )\r\n}\r\n","import {\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Radio,\r\n    RadioGroup as MuiRadioGroup,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function RadioGroup(props) {\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row name={name} value={value} onChange={onChange}>\r\n                {items.map((item) => {\r\n                    return (\r\n                        <FormControlLabel\r\n                            key={item.id}\r\n                            value={item.id}\r\n                            control={<Radio />}\r\n                            label={item.title}\r\n                        />\r\n                    );\r\n                })}\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import {\r\n    FormControl,\r\n    FormHelperText,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select as MuiSelect,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function Select(props) {\r\n    const { name, label, value, error=null, onChange, options, ...other} = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" error={error ?? error}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                label={label}\r\n            >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {options.map((item) => {\r\n                    return <MenuItem key={item.id} value={item.id}>\r\n                        {item.title}\r\n                    </MenuItem>;\r\n                })}\r\n            </MuiSelect>\r\n            <FormHelperText>{error ?? error}</FormHelperText>\r\n        </FormControl>\r\n    );\r\n}\r\n","import { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function Checkbox(props) {\r\n    const {name, value, onChange, label} = props;\r\n\r\n    const convertToDefEventPara = (name,value) => ({\r\n        target: {\r\n            name,value\r\n        }\r\n    });\r\n\r\n    return ( <FormControl>\r\n        <FormControlLabel control={<MuiCheckbox\r\n        name={name} color=\"primary\" checked={value} onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}/>} label={label}/>\r\n    </FormControl>\r\n    )\r\n}\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport React from \"react\";\r\n\r\nexport default function DatePicker(props) {\r\n    const { name, label, value, onChange } = props;\r\n    const convertToDefEventPara = (name,value) => ({\r\n        target: {\r\n            name,value\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date => {onChange(convertToDefEventPara(name,date))}}\r\n            ></KeyboardDatePicker>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","const KEYS = {\r\n    employees: \"employees\",\r\n    employeeId: \"employeeId\",\r\n};\r\n\r\nexport const getDepartmentCollection = () => [\r\n    { id: \"1\", title: \"Development\" },\r\n    { id: \"2\", title: \"Marketing\" },\r\n    { id: \"3\", title: \"Accounting\" },\r\n    { id: \"4\", title: \"HR\" },\r\n];\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data[\"id\"] = generateEmployeeId();\r\n    employees.push(data);\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null) {\r\n        localStorage.setItem(KEYS.employeeId, \"0\");\r\n    }\r\n    let id = parseInt(localStorage.getItem(KEYS.employeeId));\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString());\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees == null))\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]));\r\n    return JSON.parse(localStorage.getItem(KEYS.employees));\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useForm, Form } from \"../../components/useForm.js\";\r\nimport { Controls } from \"../../components/controls/Controls.js\";\r\nimport * as employeeService from \"./../../services/employeeServices\";\r\nconst genderItems = [\r\n    { id: \"male\", title: \"Male\" },\r\n    { id: \"female\", title: \"Female\" },\r\n    { id: \"other\", title: \"Other\" },\r\n];\r\n\r\nconst initialFieldValues = {\r\n    id: 0,\r\n    fullName: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    city: \"\",\r\n    gender: \"male\",\r\n    departmentId: \"\",\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n};\r\n\r\nexport default function EmployeeForm() {\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors };\r\n        if (\"fullName\" in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required\";\r\n        if (\"email\" in fieldValues)\r\n            temp.email = /$^|.+@.+..+/.test(fieldValues.email)\r\n                ? \"\"\r\n                : \"Email is not valid\";\r\n        if (\"mobile\" in fieldValues)\r\n            temp.mobile =\r\n            fieldValues.mobile.length > 9 ? \"\" : \"Minimum 9 numbers required\";\r\n        if (\"departmentId\" in fieldValues)\r\n            temp.departmentId =\r\n            fieldValues.departmentId.length != 0 ? \"\" : \"This field is required\";\r\n\r\n        setErrors({ ...temp });\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every((x) => x == \"\");\r\n    };\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        errors,\r\n        setErrors,\r\n        resetForm,\r\n    } = useForm(initialFieldValues, true, validate);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            employeeService.insertEmployee(values);\r\n        }\r\n    };\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"mobile\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        label=\"Gender\"\r\n                        name=\"gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    ></Controls.RadioGroup>\r\n\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button text=\"Submit\" type=\"submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    );\r\n}\r\n","import { Card, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#fdfdff\",\r\n    },\r\n    pageHeader: {\r\n        padding: `${theme.spacing(4)}px`,\r\n        display: \"flex\",\r\n        marginBottom: `${theme.spacing(3)}px`,\r\n    },\r\n    pageicon: {\r\n        display: \"inline-block\",\r\n        padding: theme.spacing(2),\r\n        color: \"#3c44b1\",\r\n    },\r\n    pageTitle: {\r\n        paddingLeft: theme.spacing(4),\r\n        \"& .MuiTypography-subtitle2\": {\r\n            opacity: \"0.6\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PageHeader(props) {\r\n    const classes = useStyles();\r\n    const { title, subtitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageicon}>{icon}</Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography variant=\"h6\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" component=\"div\">\r\n                        {title}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport { makeStyles, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function Employees() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"New Employee\"\r\n                subtitle=\"Form desing with validation\"\r\n                icon={<PeopleIcon fontSize=\"large\" />}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n                <EmployeeForm />\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n","import {\n    createMuiTheme,\n    CssBaseline,\n    makeStyles,\n    ThemeProvider,\n} from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport SideMenu from \"../components/SideMenu\";\nimport \"./App.css\";\nimport Employees from \"../Pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#333996\",\n            light: \"#3c44b126\",\n        },\n        secondary: {\n            main: \"#f83245\",\n            light: \"#f8324562\",\n        },\n        background: {\n            default: \"#f4f5fd\",\n        },\n    },\n    overrides: {\n        MuiAppBar: {\n            root: {\n                transform: \"translateZ(0)\",\n            },\n        },\n    },\n    props: {\n        MuiIconButton: {\n            disableRipple: true\n        }\n    }\n});\n\nconst useStyles = makeStyles({\n    appMain: {\n        paddingLeft: \"320px\",\n        width: \"100%\",\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <ThemeProvider theme={theme}>\n            <SideMenu />\n            <div className={classes.appMain}>\n                <Header />\n                \n                <Employees/>\n            </div>\n            <CssBaseline />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}